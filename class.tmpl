<!DOCTYPE HTML>
<html lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
	<meta name="generator" content="JsDoc Toolkit" />
	<title>JsDoc Reference - {+data.alias+}</title>

	<link media="all" rel="stylesheet" href="{+Link.base+}css/common.css" type="text/css" />
	<link media="all" rel="stylesheet" href="{+Link.base+}css/prettify.css" type="text/css" />
	<link media="all" rel="stylesheet" href="{+Link.base+}css/bootstrap.min.css" type="text/css" />
	<style type="text/css">
		.icon-jsdoc {
			background: url("{+Link.base+}img/classicons.png") no-repeat;
		}
	</style>
	<script src="http://code.jquery.com/jquery-1.7.2.min.js" type="text/javascript"></script>
	<script src="{+Link.base+}js/bootstrap.min.js" type="text/javascript"></script>
	<script src="{+Link.base+}js/prettify.js" type="text/javascript"></script>
	<script src="{+Link.base+}js/class.js" type="text/javascript"></script>
</head>

<body onload="prettyPrint()"><div class="container-fluid">
<!-- ============================== header ================================= -->	
	<!-- begin static/header.html -->
	<header class="header navbar navbar-fixed-top">
		<div class="navbar-inner">
			<div class="container-fluid">
				<a class="brand" href="#"><strong>JsDoc</strong> Reference</a>
				<ul id="class-file-selector" class="nav">
					<li><a href="{+Link.base+}index.html"><i class="icon-white icon-asterisk"></i>Class Index</a></li>
					<li><a href="{+Link.base+}files.html"><i class="icon-white icon-file"></i>File Index</a></li>
				</ul>
			</div>
		</div>
	</header>
	<!-- end static/header.html -->

<!-- ============================== classes index ============================ -->
	<div class="row-fluid">
		<div id="index" class="span3">
			<!-- begin publish.classesIndex -->
			{+publish.classesIndex+}
			<!-- end publish.classesIndex -->
		</div>
		
		<div id="content" class="span9">
<!-- ============================== class title ============================ -->
			<h1 class="classTitle">
				{!
					var classType = "";
					var classIcon = Link.base;
					
					if (data.isBuiltin()) {
						classType += "Built-In ";
					}
					
					if (data.isNamespace) {
						if (data.is('FUNCTION')) {
							classType += "Function ";
						}
						classType += "Namespace ";
						classIcon += "img/namespace.png";
					}
					else {
						classType += "Class ";
						if (data.isInterface) {
							classType += "Interface ";
							classIcon += "img/interface.png";
						} else {
							classIcon += "img/class.png";
						}
					}
					
				!}
				<img src="{+ classIcon +}" alt="{+classType+}" class="jsdoc-large-icon" />{+data.alias+}
				<if test="data.hasMethod('getInstance')"><span class="label label-jsdoc label-jsdoc-singleton">SINGLETON</span></if>
				<if test="data.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
				<if test="data.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
				<if test="data.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
				<if test="data.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
			</h1>
			<if test="data.version"><br />Version
				{+ data.version +}.<br />
			</if>
			{!
				var staticMethods = [];
				var instanceMethods = [];
				var staticProperties = [];
				var instanceProperties = [];
				var nestedNamespaces = [];
				var constructorMembers = [];
				
				data.methods.forEach(function(symbol) {
					if (symbol.is('CONSTRUCTOR')) {
						constructorMembers.push(symbol);
					} else if (symbol.isStatic) {
						staticMethods.push(symbol);
					} else {
						instanceMethods.push(symbol);
					}
				});
				staticMethods = staticMethods.sort(makeSortby("alias"));
				instanceMethods = instanceMethods.sort(makeSortby("alias"));
				
				data.properties.forEach(function(symbol) {
					if (symbol.isNamespace) {
						nestedNamespaces.push(symbol);
					} else if (symbol.isStatic) {
						staticProperties.push(symbol);
					} else {
						instanceProperties.push(symbol);
					}
				});
				nestedNamespaces = nestedNamespaces.sort(makeSortby("alias"));
				staticProperties = staticProperties.sort(makeSortby("alias"));
				instanceProperties = instanceProperties.sort(makeSortby("alias"));
			!}
			<div class="jsdoc-hierarchy-nav">
				<ul class="breadcrumb">
					<if test="data.isNamespace">
						<li class="jsdoc-hierarchy-caption">Hierarchy</li>
							<for each="namespaceSymbol" in="getParentNamespaces(data)">
								<li>{+ new Link().toSymbol(namespaceSymbol.alias) +}<span class="divider">«</span></li>
							</for>
						<li class="active">{+ data.name +}</li>
					<else />
						<li class="jsdoc-hierarchy-caption">Inheritance</li>
							<for each="classSymbol" in="getParentSymbols(data)">
								<li>{+ new Link().toSymbol(classSymbol.alias) +}<span class="divider">«</span></li>
							</for>
						<li class="active">{+ data.name +}</li>
					</if>
				</ul>
			</div>
			<!--
			<div class="subnav">
				<ul class="nav nav-pills">
					<li class="dropdown">
						<a class="dropdown-toggle" data-toggle="dropdown" href="#">
							Instance methods
							<span class="badge">{+ instanceMethods.length +}</span>
							<if test="instanceMethods.length"><b class="caret"></b></if>
						</a>
						<if test="instanceMethods.length">
							<ul class="dropdown-menu">
								<for each="member" in="instanceMethods">
									<li><a href="#{+ member.name +}">{+ member.name +}</a></li>
								</for>
							</ul>
						</if>
					</li>
					<li class="dropdown">
						<a class="dropdown-toggle" data-toggle="dropdown" href="#">
							Instance properties
							<span class="badge">{+ instanceProperties.length +}</span>
							<if test="instanceProperties.length"><b class="caret"></b></if>
						</a>
						<if test="instanceProperties.length">
							<ul class="dropdown-menu">
								<for each="member" in="instanceProperties">
									<li><a href="#{+ member.name +}">{+ member.name +}</a></li>
								</for>
							</ul>
						</if>
					</li>
					<li class="dropdown">
						<a class="dropdown-toggle" data-toggle="dropdown" href="#">
							Static methods
							<span class="badge">{+ staticMethods.length +}</span>
							<if test="staticMethods.length"><b class="caret"></b></if>
						</a>
						<if test="staticMethods.length">
							<ul class="dropdown-menu">
								<for each="member" in="staticMethods">
									<li><a href="#{+ member.name +}">{+ member.name +}</a></li>
								</for>
							</ul>
						</if>
					</li>
					<li class="dropdown">
						<a class="dropdown-toggle" data-toggle="dropdown" href="#">
							Static properties
							<span class="badge">{+ staticProperties.length +}</span>
							<if test="staticProperties.length"><b class="caret"></b></if>
						</a>
						<if test="staticProperties.length">
							<ul class="dropdown-menu">
								<for each="member" in="staticProperties">
									<li><a href="#{+ member.name +}">{+ member.name +}</a></li>
								</for>
							</ul>
						</if>
					</li>
				</ul>
			</div>
			-->

<!-- ============================== constructor summary ==================== -->
			<if test="!data.isBuiltin() && data.is('CONSTRUCTOR')">
				<h3>Constructor</h3>
				<div class="jsdoc-members">
					<div class="jsdoc-member">
						<div class="definition">
							<b>{+ addAttrToLink(new Link().toSymbol(data.alias).withText(data.name), 'name', data.name)+}</b>
							<if test="classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
							<if test="data.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
							<if test="data.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
							<if test="data.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
							<if test="data.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
							<if test="data.isStatic"><span class="label label-jsdoc label-jsdoc-static">STATIC</span></if>
						</div>
						<div class="description">
							{+createDescription(data.desc) || 'No description.'+}
							<span class="pull-right">
								{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), data.srcLineNum) +}
							</span>
						</div>
					</div>
				</div>
			<else /><if test="!data.isBuiltin() && data.isNamespace">
				<h3>Namespace</h3>
				<div class="jsdoc-members">
					<div class="jsdoc-member">
						<div class="definition">
							<b>{+ addAttrToLink(new Link().toSymbol(data.alias), 'name', data.name)+}</b>
							<if test="classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
							<if test="data.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
							<if test="data.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
							<if test="data.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
							<if test="data.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
							<if test="data.isStatic"><span class="label label-jsdoc label-jsdoc-static">STATIC</span></if>
						</div>
						<div class="description">
							{+createDescription(data.desc) || 'No description.'+}
							<span class="pull-right">
								{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), data.srcLineNum) +}
							</span>
						</div>
					</div>
				</div>
			</if></if>

<!-- ============================== instance members summary ===================== -->
			{!
				var instanceMethodsLength = instanceMethods.length;
				var instancePropertiesLength = instanceProperties.length;
			!}
			<if test="instanceMethodsLength || instancePropertiesLength">
				<h3>Instance members</h3>
				<if test="instanceMethodsLength">
					<h4>Instance Methods<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="instanceMethods">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<span class="signature">{+ makeSignature(member.params) +}</span>
									<if test="member.type && member.type !== 'void'"> : {+ createTypeLink(member.type) +}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="jsdoc-inherits-from pull-right">{+ new Link().toSymbol(member.memberOf) +}</span>
								</div>
								<div class="description">
									<div class="jsdoc-member-summary">
										{+ createDescription(member.desc) || 'No description.' +}
										<span class="pull-right">
											{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
										</span>
									</div>
									<if test="member.params.length">
										<div class="jsdoc-member-detail">
											<b>Parameters</b>
											<dl>
												<for each="param" in="member.params">
													<dt>{+ param.name +} : {+ param.type ? createTypeLink(param.type) : 'No description.' +}</dt>
													<dd>{+ createDescription(param.desc) +}</dd>
												</for>
											</dl>
										</div>
									</if>
								</div>
							</div>
						</for>
					</div>
				</if>
				<if test="instancePropertiesLength">
					<h4>Instance Properties<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="instanceProperties">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<if test="member.type"> : {+new Link().toSymbol(member.type)+}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="jsdoc-inherits-from pull-right">{+new Link().toSymbol(member.memberOf)+}</span>
								</div>
								<div class="description">
									{+createDescription(member.desc) || 'No description.'+}
									<span class="pull-right">
										{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
									</span>
								</div>
							</div>
						</for>
					</div>
				</if>
			</if>

<!-- ============================== static members summary ======================== -->
			{!
				var nestedNamespacesLength = nestedNamespaces.length;
				var constructorMembersLength = constructorMembers.length;
				var staticMethodsLength = staticMethods.length;
				var staticPropertiesLength = staticProperties.length;
			!}
			<if test="nestedNamespacesLength || constructorMembersLength || staticMethodsLength || staticPropertiesLength">
				<h3>Static members</h3>
				<if test="nestedNamespacesLength">
					<h4>Nested namespaces<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="nestedNamespaces">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<i class="icon-jsdoc icon-jsdoc-namespace"></i>
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<if test="member.type && member.type !== 'void'"> : {+new Link().toSymbol(member.type)+}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="label label-jsdoc label-jsdoc-static">STATIC</span>
									<span class="jsdoc-inherits-from pull-right">{+new Link().toSymbol(member.memberOf)+}</span>
								</div>
								<div class="description">
									{+createDescription(member.desc) || 'No description.'+}
									<span class="pull-right">
										{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
									</span>
								</div>
							</div>
						</for>
					</div>
				</if>
				<if test="constructorMembersLength">
					<h4>Constructor members<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="constructorMembers">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<i class="icon-jsdoc icon-jsdoc-class"></i>
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<span class="signature">{+ makeSignature(member.params) +}</span>
									<if test="member.type && member.type !== 'void'"> : {+new Link().toSymbol(member.type)+}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="label label-jsdoc label-jsdoc-static">STATIC</span>
									<span class="jsdoc-inherits-from pull-right">{+new Link().toSymbol(member.memberOf)+}</span>
								</div>
								<div class="description">
									{+createDescription(member.desc) || 'No description.'+}
									<span class="pull-right">
										{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
									</span>
								</div>
							</div>
						</for>
					</div>
				</if>
				<if test="staticMethodsLength">
					<h4>Static Methods<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="staticMethods">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<span class="signature">{+ makeSignature(member.params) +}</span>
									<if test="member.type && member.type !== 'void'"> : {+new Link().toSymbol(member.type)+}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="label label-jsdoc label-jsdoc-static">STATIC</span>
									<span class="jsdoc-inherits-from pull-right">{+new Link().toSymbol(member.memberOf)+}</span>
								</div>
								<div class="description">
									{+createDescription(member.desc) || 'No description.'+}
									<span class="pull-right">
										{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
									</span>
								</div>
							</div>
						</for>
					</div>
				</if>
				<if test="staticPropertiesLength">
					<h4>Static Properties<span class="jsdoc-inherits-caption pull-right">Defined By</span></h4>
					<div class="jsdoc-members">
						<for each="member" in="staticProperties">
							<div class="jsdoc-member{+ member.isPrivate ? ' container-jsdoc-private' : '' +}{+ member.isProtected ? ' container-jsdoc-protected' : '' +}">
								<div class="definition">
									<b>{+ addAttrToLink(new Link().toSymbol(member.alias).withText(member.name), 'name', member.name)+}</b>
									<if test="member.type"> : {+new Link().toSymbol(member.type)+}</if>
									<if test="member.deprecated"><span class="label label-jsdoc label-jsdoc-deprecated">DEPRECATED</span></if>
									<if test="member.isPrivate"><span class="label label-jsdoc label-jsdoc-private">PRIVATE</span></if>
									<if test="member.isProtected"><span class="label label-jsdoc label-jsdoc-protected">PROTECTED</span></if>
									<if test="member.isInner"><span class="label label-jsdoc label-jsdoc-inner">INNER</span></if>
									<span class="label label-jsdoc label-jsdoc-static">STATIC</span>
									<span class="jsdoc-inherits-from pull-right">{+new Link().toSymbol(member.memberOf)+}</span>
								</div>
								<div class="description">
									{+createDescription(member.desc) || 'No description.'+}
									<span class="pull-right">
										{+ addLineNumHashToLink(new Link().toSrc(data.srcFile).withText('code »'), member.srcLineNum) +}
									</span>
								</div>
							</div>
						</for>
					</div>
				</if>
			</if>

<!-- ============================== footer ================================= -->
	<footer class="footer">
		<if test="JSDOC.opt.D.copyright"><p>&copy;{+JSDOC.opt.D.copyright+}</p></if>
		<p>Documentation generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blankt">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}</p>
	</footer>
</div></body>
</html>
